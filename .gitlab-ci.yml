stages:
  - test
  - build
  - release

unit-tests:
  stage: test
  image: rust:latest
  script:
    - cargo install cargo-tarpaulin
    - cd backend
    - cargo tarpaulin --include-files *domain*
  coverage: '/^\d+.\d+% coverage/'

building:
  stage: build
  image: docker:27.5.1
  services:
    - name: docker:27.5.1-dind
      alias: docker
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""              #Disables TLS
  script:
    - docker pull mongo:8 
    - docker compose build --no-cache
    - docker save -o rusty-minesweeper_v0.$CI_PIPELINE_IID.tar rusty-minesweeper-backend rusty-minesweeper-frontend mongo
  needs: ["unit-tests"]
  artifacts:
    name: rusty-minesweeper
    paths:
      - $CI_PROJECT_DIR/rusty-minesweeper_v0.$CI_PIPELINE_IID.tar


release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Only run this job on merges to main
  script:
    - echo "Running release_job for pipeline $CI_PIPELINE_IID"
    - export TAG_NAME="v0.$CI_PIPELINE_IID"  # Define the tag dynamically
    - git remote set-url origin "https://gitlab-ci-token:$CI_JOB_TOKEN@git.sogyo.nl/abaars/rusty-minesweeper.git" # Set the origin to push to using the CI pipeline token
    - git tag $TAG_NAME $CI_COMMIT_SHA       # Create the tag
    - git push origin $TAG_NAME              # Push the tag to GitLab
    - release-cli create --name "Release $TAG_NAME" \
        --tag-name "$TAG_NAME" \
        --description "Release $TAG_NAME" \
        --ref "$CI_COMMIT_SHA" \
        --assets-link "{\"name\":\"Executable file\",\"url\":\"$CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/raw/rusty-minesweeper_$TAG_NAME.tar\"}"
  needs: ["building"]
  release:
    tag_name: "v0.$CI_PIPELINE_IID"
    description: "Release v0.$CI_PIPELINE_IID"
    ref: "$CI_COMMIT_SHA"